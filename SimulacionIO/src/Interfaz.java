/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Diego Angulo ALfaro
 * @author Jean Carlo Zuñiga 
 */

public class Interfaz extends javax.swing.JFrame {

    
    private boolean datosValidos;
    private boolean simulacion;
    
    // Constructor
    public Interfaz() {
        initComponents();
        iniciarMisComponentes();
        datosValidos = false;
        simulacion = false;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        botonInfo = new javax.swing.JButton();
        botonAyuda = new javax.swing.JButton();
        panelContenedor = new javax.swing.JPanel();
        panelSimulacion = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        labelNS = new javax.swing.JLabel();
        entradaNS = new javax.swing.JTextField();
        labelTT = new javax.swing.JLabel();
        entradaTT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        entradaVelocidad = new javax.swing.JComboBox();
        labelDT = new javax.swing.JLabel();
        entradaDT = new javax.swing.JTextField();
        mensajeError = new javax.swing.JLabel();
        botonInicio = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        mensajeEjecutando = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoResultado = new javax.swing.JTextArea();
        botonGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        panelInfo = new javax.swing.JPanel();
        botonRegresarDeInfo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        panelAyuda = new javax.swing.JPanel();
        botonRegresarDeAyuda = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulación Por Eventos Discretos");
        setResizable(false);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        botonInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/info.png"))); // NOI18N
        botonInfo.setText("Información");
        botonInfo.setFocusable(false);
        botonInfo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        botonInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInfoActionPerformed(evt);
            }
        });
        jToolBar1.add(botonInfo);

        botonAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ayuda.png"))); // NOI18N
        botonAyuda.setText("Ayuda");
        botonAyuda.setFocusable(false);
        botonAyuda.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        botonAyuda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAyudaActionPerformed(evt);
            }
        });
        jToolBar1.add(botonAyuda);

        panelContenedor.setLayout(new java.awt.CardLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de simulación"));
        jPanel1.setMaximumSize(new java.awt.Dimension(191, 406));
        jPanel1.setMinimumSize(new java.awt.Dimension(191, 406));
        jPanel1.setName(""); // NOI18N

        labelNS.setText("Número de Simulaciones :");

        labelTT.setText("Tiempo Total :");

        jLabel3.setText("Velocidad :");

        entradaVelocidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Modo Rápido", "Modo Lento" }));

        labelDT.setText("Duración del Token :");

        mensajeError.setForeground(new java.awt.Color(255, 0, 0));
        mensajeError.setText("Datos inválidos.");
        mensajeError.setVisible(false);

        botonInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/start.png"))); // NOI18N
        botonInicio.setText("Iniciar");
        botonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInicioActionPerformed(evt);
            }
        });

        mensajeEjecutando.setForeground(new java.awt.Color(0, 204, 0));
        mensajeEjecutando.setText("Ejecutando simulación...");
        mensajeEjecutando.setVisible(false);

        jLabel1.setText("segundos");
        jLabel1.setEnabled(false);

        jLabel2.setText("segundos");
        jLabel2.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mensajeEjecutando, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(labelNS)
                        .addComponent(mensajeError)
                        .addComponent(labelTT)
                        .addComponent(labelDT)
                        .addComponent(botonInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(entradaDT, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(entradaTT, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1))
                        .addComponent(entradaVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(entradaNS, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator2))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelNS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entradaNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(labelTT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entradaTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entradaVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(labelDT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(entradaDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(mensajeEjecutando)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensajeError)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonInicio)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        textoResultado.setEditable(false);
        textoResultado.setColumns(20);
        textoResultado.setRows(5);
        textoResultado.setAutoscrolls(false);
        jScrollPane1.setViewportView(textoResultado);

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(botonGuardar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(botonGuardar)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelSimulacionLayout = new javax.swing.GroupLayout(panelSimulacion);
        panelSimulacion.setLayout(panelSimulacionLayout);
        panelSimulacionLayout.setHorizontalGroup(
            panelSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSimulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelSimulacionLayout.setVerticalGroup(
            panelSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSimulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelContenedor.add(panelSimulacion, "card2");

        botonRegresarDeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/atras.png"))); // NOI18N
        botonRegresarDeInfo.setText("Regresar");
        botonRegresarDeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarDeInfoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Información");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("\n  - Descripción de la simulación:\n\n  Se tiene una LAN (Local Area Network) compuesta por tres computadoras A, B, C. La capa de red de cada \n  máquina recibe archivos para su envío hacia máquinas fuera de la red. Los archivos recibidos por cada una \n  de estas computadoras deben ser enviados al un servidor antivirus para que descarte aquellos que lleven \n  virus, el resto de los archivos son enviados por este servidor al router del sistema para que se  encargue \n  de enviarlos a su destino.    \n\n  Hay una sola línea de transmisión que deben compartir las 3 computadoras para enviar sus archivos al servidor \n  antivirus. La transferencia de un archivo desde el antivirus al router se hace inmediata. La manera de utilizar\n  la única línea de transmisión por las 3 computadoras para el envío de sus archivos al servidor antivirus sigue \n  un protocolo de Polling o Token Ring.\n\n\n  - Elaborado por:\n\n  Diego Angulo Alfaro\n  Jean Carlo Zuñiga");
        jTextArea1.setBorder(null);

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextArea1)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInfoLayout.createSequentialGroup()
                        .addComponent(botonRegresarDeInfo)
                        .addGap(219, 219, 219)
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegresarDeInfo)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelContenedor.add(panelInfo, "card3");

        botonRegresarDeAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/atras.png"))); // NOI18N
        botonRegresarDeAyuda.setText("Regresar");
        botonRegresarDeAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarDeAyudaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Ayuda");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("\n - Digite el número de simulaciones que desea ejecutar, el tiempo total y la velocidad de la simulación, y la \n   duración del token de cada computadora en los campos indicados.\n\n - El tiempo total de la simulación y la duración del token deben ser especificados en segundos.\n\n - Oprima el botón \"Iniciar\" para comenzar la simulación.\n\n - En caso de que reciba el mensaje \"Datos inválidos\" recuerde que el número de simulaciones, tiempo total \n   y duración del token deben ser valores positivos mayores que cero.\n\n - Cuando haya finalizado la simulación, el resultado será mostrado en la parte derecha de la pantalla.\n\n - Puede utilizar el botón \"Guardar\" para guardar el resultado de la simulación en un archivo de texto.");

        javax.swing.GroupLayout panelAyudaLayout = new javax.swing.GroupLayout(panelAyuda);
        panelAyuda.setLayout(panelAyudaLayout);
        panelAyudaLayout.setHorizontalGroup(
            panelAyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAyudaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAyudaLayout.createSequentialGroup()
                        .addComponent(botonRegresarDeAyuda)
                        .addGap(230, 230, 230)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextArea2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelAyudaLayout.setVerticalGroup(
            panelAyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAyudaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegresarDeAyuda)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextArea2, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelContenedor.add(panelAyuda, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    
    // Botón de inicio
    // Inicia la simulación
    private void botonInicioActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
        if( simulacion == false && revisarEntradas() == true ){
            datosValidos = true;
            simulacion = true;
            textoResultado.setText("");
            mensajeEjecutando.setVisible(true);
        }
    }                                           

    
    
    // Guarda el contenido del área de texto en un archivo .txt
    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
        if( simulacion == false ){
            
            // Si el área de texto no está vacía
            if (textoResultado.getText().equals("") == false) {

                JFileChooser fileChooser = new JFileChooser();

                fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                fileChooser.setDialogTitle("Guardar resultado");
                fileChooser.showSaveDialog(null);

                File file = fileChooser.getSelectedFile();

                String contenido = textoResultado.getText();
                contenido = contenido.replaceAll("(?!\\r)\\n", "\r\n");

                try {
                    FileWriter fw = new FileWriter(file.getPath() + ".txt");
                    fw.write(contenido);
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }                                            

    private void botonAyudaActionPerformed(java.awt.event.ActionEvent evt) {                                           
        panelContenedor.removeAll();
        panelContenedor.repaint();
        panelContenedor.revalidate();

        panelContenedor.add(panelAyuda);
        panelContenedor.repaint();
        panelContenedor.revalidate();
    }                                          

    private void botonInfoActionPerformed(java.awt.event.ActionEvent evt) {                                          
        
        panelContenedor.removeAll();
        panelContenedor.repaint();
        panelContenedor.revalidate();

        panelContenedor.add(panelInfo);
        panelContenedor.repaint();
        panelContenedor.revalidate();  
    }                                         

    private void botonRegresarDeInfoActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        panelContenedor.removeAll();
        panelContenedor.repaint();
        panelContenedor.revalidate();

        panelContenedor.add(panelSimulacion);
        panelContenedor.repaint();
        panelContenedor.revalidate();
    }                                                   

    private void botonRegresarDeAyudaActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        panelContenedor.removeAll();
        panelContenedor.repaint();
        panelContenedor.revalidate();

        panelContenedor.add(panelSimulacion);
        panelContenedor.repaint();
        panelContenedor.revalidate();
    }                                                    

    
  
    // Inicializa componentes personalizados
    private void iniciarMisComponentes(){
        
        this.setIconImage(new ImageIcon("src/icons/start.png").getImage());
    }
    
    
    
    // Devuelve si los datos de entrada son válidos
    public  boolean datosValidos(){
        return datosValidos;
    }
    
    
    
    // Revisa que los datos de entrada de la interfaz sean validas
    private boolean revisarEntradas(){
        
        boolean valido = true;
        
        try{
            if ( Integer.parseInt(entradaNS.getText()) > 0 ){
                labelNS.setForeground(new java.awt.Color(0, 0, 0));
            }
            else{
                throw new Exception();
            }
        }
        catch(Exception e){
            valido = false;
            labelNS.setForeground(new java.awt.Color(255, 0, 0));
            mensajeError.setVisible(true);
        }
        
        
        try{
            if ( Integer.parseInt(entradaTT.getText()) > 0 ){
                labelTT.setForeground(new java.awt.Color(0, 0, 0));
            }
            else{
                throw new Exception();
            }
        }
        catch(Exception e){
            valido = false;
            labelTT.setForeground(new java.awt.Color(255, 0, 0));
            mensajeError.setVisible(true);
        }
        
        try{
            if ( Integer.parseInt(entradaDT.getText()) > 0 ){
                labelDT.setForeground(new java.awt.Color(0, 0, 0));
            }
            else{
                throw new Exception();
            }
        }
        catch(Exception e){
            valido = false;
            labelDT.setForeground(new java.awt.Color(255, 0, 0));
            mensajeError.setVisible(true);
        }
        
        if( valido == true ){
            this.mensajeError.setVisible(false);
        }
        
        return valido;
    }
    
    
    
    
    public void fin(){
        datosValidos = false;
        simulacion = false;
        mensajeEjecutando.setVisible(false);
    }
    
    
    
    // Devuelve el número de simulaciones indicado en la entrada
    public int getNumeroSimulaciones(){
        
        int numeroSimulaciones = Integer.parseInt(entradaNS.getText());
        return numeroSimulaciones;
    }
    
    
    
    // Devuelve el tiempo total indicado en la entrada
    public int getTiempoTotal(){
        
        int tiempoTotal = Integer.parseInt(entradaTT.getText());
        return tiempoTotal;
    }
    
    
    
    
    // Devuelve la velocidad indicada en la entrada
    public int getVelocidad(){
    
        int velocidad = entradaVelocidad.getSelectedIndex();
        return velocidad;
    }
    
    
    
    // Devuelve la duración del token indicado en la entrada
    public int getDuracionToken(){
        
        int duracionToken = Integer.parseInt(entradaDT.getText());
        return duracionToken;
    }
    
    
    
    // Escribe una hilera en el JTextArea de la interfaz
    public void escribirResultado( String texto ){
        textoResultado.append( texto );
    }
    
    
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton botonAyuda;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonInfo;
    private javax.swing.JButton botonInicio;
    private javax.swing.JButton botonRegresarDeAyuda;
    private javax.swing.JButton botonRegresarDeInfo;
    private javax.swing.JTextField entradaDT;
    private javax.swing.JTextField entradaNS;
    private javax.swing.JTextField entradaTT;
    private javax.swing.JComboBox entradaVelocidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel labelDT;
    private javax.swing.JLabel labelNS;
    private javax.swing.JLabel labelTT;
    private javax.swing.JLabel mensajeEjecutando;
    private javax.swing.JLabel mensajeError;
    private javax.swing.JPanel panelAyuda;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelSimulacion;
    private javax.swing.JTextArea textoResultado;
    // End of variables declaration                   
}
